name: Docker Build and Push to ECR

on:
  workflow_call:
    inputs:
      aws_region:
        required: false
        type: string
        description: AWS Region
        default: ap-southeast-1
      docker_meta_tags:
        required: true
        type: string
        description: Tags argument to docker meta
      docker_build_context:
        required: false
        type: string
        description: Docker build context
        default: ${{ github.workspace }}
      docker_build_platforms:
        required: true
        type: string
        description: Target architectures for Docker build, e.g. linux/amd64 OR linux/arm64
      docker_build_args:
        required: false
        type: string
        description: List of build-time variables to docker build
      docker_build_secrets:
        required: false
        type: string
        description: List of secrets to expose to the build
      docker_build_secret_files:
        required: false
        type: string
        description: List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
      dockerfile_path:
        required: false
        type: string
        description: Path to Dockerfile
        default: "./Dockerfile"
      ecr_registries:
        required: true
        type: string
        description: AWS account IDs included with ECR login (comma separated)
      ecr_uri:
        required: true
        type: string
        description: ECR URI to push image to
      emulation_required:
        required: false
        type: boolean
        description: Whether to install QEMU to enable architecture emulation
        default: false
      include_checkout:
        required: false
        type: boolean
        description: Whether to run the checkout action. Might be false if a pre-build step has already checked out.
        default: true
      role_to_assume:
        required: true
        type: string
        description: ARN of the role that is authorized to publish the image
      buildx_image_uri:
        required: false
        type: string
        description: Optionally override buildx image
        default: "moby/buildkit:master"
      qemu_image_uri:
        required: false
        type: string
        description: Optionally override of qemu image
        default: "tonistiigi/binfmt:latest"
      trigger_push:
        required: false
        type: boolean
        description: Whether to push image after build
        default: true
      additional_tags:
        required: false
        type: string
        description: Extra tags to be pushed
        default: ""
    outputs:
      tags:
        description: Image tags of the build image
        value: ${{ jobs.docker-build-push-ecr.outputs.tags }}

jobs:
  docker-build-push-ecr:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ inputs.role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
          registries: ${{ inputs.ecr_registries }}

      - name: Checkout
        if: ${{ inputs.include_checkout }}
        uses: actions/checkout@v5

      - name: Set up QEMU
        if: ${{ inputs.emulation_required }}
        uses: docker/setup-qemu-action@v3
        with:
          image: ${{ inputs.qemu_image_uri }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=${{ inputs.buildx_image_uri }}

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.ecr_uri }}
          tags: ${{ inputs.docker_meta_tags }}

      - name: Docker build and push
        id: publish
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.docker_build_context }}
          build-args: ${{ inputs.docker_build_args }}
          secrets: ${{ inputs.docker_build_secrets }}
          secret-files: ${{ inputs.docker_build_secret_files }}
          file: ${{ inputs.dockerfile_path }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.docker_build_platforms }}
          provenance: false
          push: ${{ inputs.trigger_push }}
          tags: ${{ inputs.additional_tags == '' && steps.meta.outputs.tags || format('{0},{1}:{2}', steps.meta.outputs.tags, inputs.ecr_uri, inputs.additional_tags) }}